// This file is generated by omniidl (C++ backend) - omniORB_4_2. Do not edit.

#include "demo.h"

OMNI_USING_NAMESPACE(omni)

static const char* _0RL_dyn_library_version = omniORB_4_2_dyn;

static ::CORBA::TypeCode::_Tracker _0RL_tcTrack(__FILE__);

static CORBA::TypeCode_ptr _0RL_tc_BeginEnd_mDoubleSeq = CORBA::TypeCode::PR_alias_tc("IDL:BeginEnd/DoubleSeq:1.0", "DoubleSeq", CORBA::TypeCode::PR_sequence_tc(0, CORBA::TypeCode::PR_double_tc(), &_0RL_tcTrack), &_0RL_tcTrack);


#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace BeginEnd { 
  const ::CORBA::TypeCode_ptr _tc_DoubleSeq = _0RL_tc_BeginEnd_mDoubleSeq;
} 
#else
const ::CORBA::TypeCode_ptr BeginEnd::_tc_DoubleSeq = _0RL_tc_BeginEnd_mDoubleSeq;
#endif

#if defined(HAS_Cplusplus_Namespace) && defined(_MSC_VER)
// MSVC++ does not give the constant external linkage otherwise.
namespace BeginEnd { 
  const ::CORBA::TypeCode_ptr _tc_demo = CORBA::TypeCode::PR_interface_tc("IDL:BeginEnd/demo:1.0", "demo", &_0RL_tcTrack);
} 
#else
const ::CORBA::TypeCode_ptr BeginEnd::_tc_demo = CORBA::TypeCode::PR_interface_tc("IDL:BeginEnd/demo:1.0", "demo", &_0RL_tcTrack);
#endif

static void _0RL_BeginEnd_mDoubleSeq_marshal_fn(cdrStream& _s, void* _v)
{
  BeginEnd::DoubleSeq* _p = (BeginEnd::DoubleSeq*)_v;
  *_p >>= _s;
}
static void _0RL_BeginEnd_mDoubleSeq_unmarshal_fn(cdrStream& _s, void*& _v)
{
  BeginEnd::DoubleSeq* _p = new BeginEnd::DoubleSeq;
  *_p <<= _s;
  _v = _p;
}
static void _0RL_BeginEnd_mDoubleSeq_destructor_fn(void* _v)
{
  BeginEnd::DoubleSeq* _p = (BeginEnd::DoubleSeq*)_v;
  delete _p;
}

void operator<<=(::CORBA::Any& _a, const BeginEnd::DoubleSeq& _s)
{
  BeginEnd::DoubleSeq* _p = new BeginEnd::DoubleSeq(_s);
  _a.PR_insert(_0RL_tc_BeginEnd_mDoubleSeq,
               _0RL_BeginEnd_mDoubleSeq_marshal_fn,
               _0RL_BeginEnd_mDoubleSeq_destructor_fn,
               _p);
}
void operator<<=(::CORBA::Any& _a, BeginEnd::DoubleSeq* _sp)
{
  _a.PR_insert(_0RL_tc_BeginEnd_mDoubleSeq,
               _0RL_BeginEnd_mDoubleSeq_marshal_fn,
               _0RL_BeginEnd_mDoubleSeq_destructor_fn,
               _sp);
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, BeginEnd::DoubleSeq*& _sp)
{
  return _a >>= (const BeginEnd::DoubleSeq*&) _sp;
}
::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, const BeginEnd::DoubleSeq*& _sp)
{
  void* _v;
  if (_a.PR_extract(_0RL_tc_BeginEnd_mDoubleSeq,
                    _0RL_BeginEnd_mDoubleSeq_unmarshal_fn,
                    _0RL_BeginEnd_mDoubleSeq_marshal_fn,
                    _0RL_BeginEnd_mDoubleSeq_destructor_fn,
                    _v)) {
    _sp = (const BeginEnd::DoubleSeq*)_v;
    return 1;
  }
  return 0;
}

static void _0RL_BeginEnd_mdemo_marshal_fn(cdrStream& _s, void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  omniObjRef::_marshal(_o, _s);
}
static void _0RL_BeginEnd_mdemo_unmarshal_fn(cdrStream& _s, void*& _v)
{
  omniObjRef* _o = omniObjRef::_unMarshal(BeginEnd::demo::_PD_repoId, _s);
  _v = _o;
}
static void _0RL_BeginEnd_mdemo_destructor_fn(void* _v)
{
  omniObjRef* _o = (omniObjRef*)_v;
  if (_o)
    omni::releaseObjRef(_o);
}

void operator<<=(::CORBA::Any& _a, BeginEnd::demo_ptr _o)
{
  BeginEnd::demo_ptr _no = BeginEnd::demo::_duplicate(_o);
  _a.PR_insert(BeginEnd::_tc_demo,
               _0RL_BeginEnd_mdemo_marshal_fn,
               _0RL_BeginEnd_mdemo_destructor_fn,
               _no->_PR_getobj());
}
void operator<<=(::CORBA::Any& _a, BeginEnd::demo_ptr* _op)
{
  _a.PR_insert(BeginEnd::_tc_demo,
               _0RL_BeginEnd_mdemo_marshal_fn,
               _0RL_BeginEnd_mdemo_destructor_fn,
               (*_op)->_PR_getobj());
  *_op = BeginEnd::demo::_nil();
}

::CORBA::Boolean operator>>=(const ::CORBA::Any& _a, BeginEnd::demo_ptr& _o)
{
  void* _v;
  if (_a.PR_extract(BeginEnd::_tc_demo,
                    _0RL_BeginEnd_mdemo_unmarshal_fn,
                    _0RL_BeginEnd_mdemo_marshal_fn,
                    _0RL_BeginEnd_mdemo_destructor_fn,
                    _v)) {
    omniObjRef* _r = (omniObjRef*)_v;
    if (_r)
      _o = (BeginEnd::demo_ptr)_r->_ptrToObjRef(BeginEnd::demo::_PD_repoId);
    else
      _o = BeginEnd::demo::_nil();
    return 1;
  }
  return 0;
}

